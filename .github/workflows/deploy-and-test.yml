name: CI Test on AWS EC2

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up SSH Key from base64
      run: |
        printf "%s" "${{ secrets.AWS_EC2_KEY_B64 }}" | base64 -d > key.pem
        chmod 600 key.pem

    - name: Debug SSH connection
      run: |
        ssh -vvv -o StrictHostKeyChecking=no -i key.pem ${{ secrets.AWS_EC2_USER }}@${{ secrets.AWS_EC2_HOST }} echo "SSH OK"
    - name: Copy project to EC2
      run: |
        scp -o StrictHostKeyChecking=no -i key.pem -r "Trading-Automation" \
        ${{ secrets.AWS_EC2_USER }}@${{ secrets.AWS_EC2_HOST }}:~/Trading-Automation
 
    - name: Run trading_automation.py on EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.AWS_EC2_USER }}@${{ secrets.AWS_EC2_HOST }} << 'EOF'
          cd ~/Trading-Automation
          python3 -m pip install -r requirements.txt || true
          nohup python3 trading_automation.py > output.log 2>&1 &
          sleep 10
          tail -n 20 output.log
        EOF

    - name: Restart tradingbot service on EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.AWS_EC2_USER }}@${{ secrets.AWS_EC2_HOST }} << 'EOF'
          sudo systemctl daemon-reload
          sudo systemctl restart tradingbot.service
          sudo systemctl status tradingbot.service --no-pager
        EOF
        